definitions:
  dto.Authorize:
    properties:
      attribute:
        allOf:
        - $ref: '#/definitions/value.AuthorizeAttribute'
        description: 鉴权属性
      created_at:
        type: string
      description:
        description: 描述
        type: string
      id:
        type: string
      name:
        description: 鉴权备注
        type: string
      type:
        description: 鉴权类型
        type: string
      updated_at:
        type: string
    type: object
  dto.Certificate:
    properties:
      certificate:
        description: 证书
        type: string
      created_at:
        type: string
      dns_names:
        description: 证书支持的域名
        items:
          type: string
        type: array
      id:
        type: string
      key:
        description: 私钥
        type: string
      name:
        description: 证书备注名
        type: string
      not_after:
        description: 证书有效期
        type: string
      not_before:
        description: 证书开启时间
        type: string
      updated_at:
        type: string
    type: object
  dto.Collection:
    properties:
      authorize:
        allOf:
        - $ref: '#/definitions/dto.Authorize'
        description: 鉴权信息
      authorize_id:
        description: 鉴权信息ID
        type: string
      created_at:
        type: string
      description:
        type: string
      endpoint:
        allOf:
        - $ref: '#/definitions/dto.Endpoint'
        description: |-
          后端服务
          集合中没有设置后端服务的路由默认继承集合的后端服务信息
      endpoint_id:
        description: 后端服务
        type: string
      id:
        type: string
      name:
        type: string
      parent_id:
        description: 父级ID
        type: string
      routes:
        description: 路由信息
        items:
          $ref: '#/definitions/dto.Route'
        type: array
      server_names:
        description: |-
          服务域名
          外部服务访问路由的入口
        items:
          type: string
        type: array
      updated_at:
        type: string
    type: object
  dto.DynamicStatCollection:
    properties:
      cpu_percent:
        items:
          type: number
        type: array
      disk_read:
        items:
          type: integer
        type: array
      disk_read_speed:
        items:
          type: number
        type: array
      disk_usage:
        items:
          type: number
        type: array
      disk_write:
        items:
          type: integer
        type: array
      disk_write_speed:
        items:
          type: number
        type: array
      load_1:
        items:
          type: number
        type: array
      load_5:
        items:
          type: number
        type: array
      load_15:
        items:
          type: number
        type: array
      mem_swap_used:
        items:
          type: number
        type: array
      mem_virtual_used:
        items:
          type: number
        type: array
      net_recv:
        items:
          type: integer
        type: array
      net_recv_speed:
        items:
          type: number
        type: array
      net_send:
        items:
          type: integer
        type: array
      net_send_speed:
        items:
          type: number
        type: array
      time:
        items:
          type: integer
        type: array
    type: object
  dto.Endpoint:
    properties:
      created_at:
        type: string
      description:
        description: 服务描述
        type: string
      endpoint:
        allOf:
        - $ref: '#/definitions/value.ForwardEndpoint'
        description: 远程服务
      id:
        type: string
      name:
        description: 后端名
        type: string
      type:
        allOf:
        - $ref: '#/definitions/enum.EndpointType'
        description: 服务类型
      updated_at:
        type: string
    type: object
  dto.Route:
    properties:
      authorize:
        allOf:
        - $ref: '#/definitions/dto.Authorize'
        description: 鉴权信息
      authorize_id:
        description: 鉴权信息ID
        type: string
      collection_id:
        description: 分组ID
        type: string
      created_at:
        type: string
      description:
        type: string
      endpoint:
        allOf:
        - $ref: '#/definitions/dto.Endpoint'
        description: 路由自定义的后端路由
      endpoint_id:
        description: 后端服务
        type: string
      id:
        type: string
      match_options:
        description: 路由的特殊匹配规则
        items:
          $ref: '#/definitions/value.MatchOption'
        type: array
      method:
        items:
          type: string
        type: array
      modify_options:
        description: 数据重写规则
        items:
          $ref: '#/definitions/value.ModifyOption'
        type: array
      name:
        type: string
      path:
        description: 路径
        type: string
      path_rewrite:
        allOf:
        - $ref: '#/definitions/value.PathRewrite'
        description: 路由重写规则
      path_type:
        allOf:
        - $ref: '#/definitions/enum.RoutePathType'
        description: 路径类型
      status:
        allOf:
        - $ref: '#/definitions/enum.RouteStatus'
        description: 状态
      updated_at:
        type: string
    type: object
  enum.EndpointType:
    enum:
    - static
    type: string
    x-enum-varnames:
    - EndpointTypeStatic
  enum.RoutePathType:
    enum:
    - exact
    - prefix
    type: string
    x-enum-varnames:
    - RoutePathTypeExact
    - RoutePathTypePrefix
  enum.RouteStatus:
    enum:
    - active
    - inactive
    type: string
    x-enum-varnames:
    - RouteStatusActive
    - RouteStatusInactive
  httputil.HttpError:
    properties:
      error:
        $ref: '#/definitions/httputil.HttpErrorDetail'
    type: object
  httputil.HttpErrorDetail:
    properties:
      code:
        type: string
      details:
        items:
          type: string
        type: array
      message:
        type: string
    type: object
  service.CreateAuthorizeParam:
    properties:
      attribute:
        $ref: '#/definitions/value.AuthorizeAttribute'
      description:
        type: string
      name:
        type: string
      type:
        type: string
    required:
    - attribute
    - name
    - type
    type: object
  service.CreateCertificateParam:
    properties:
      certificate:
        type: string
      key:
        type: string
      name:
        type: string
    required:
    - certificate
    - key
    - name
    type: object
  service.CreateCollectionParam:
    properties:
      authorize_id:
        description: 鉴权配置
        type: string
      description:
        description: 分组描述
        type: string
      endpoint_id:
        description: 绑定的后端服务
        type: string
      name:
        description: 分组名
        type: string
      parent_id:
        description: 父级节点
        type: string
      server_names:
        description: 绑定的域名
        items:
          type: string
        type: array
    required:
    - name
    type: object
  service.CreateEndpointParam:
    properties:
      description:
        description: 服务描述
        type: string
      endpoint:
        allOf:
        - $ref: '#/definitions/value.ForwardEndpoint'
        description: 远程服务
      name:
        description: 服务备注名
        type: string
      type:
        allOf:
        - $ref: '#/definitions/enum.EndpointType'
        description: 服务类型
    required:
    - endpoint
    - name
    - type
    type: object
  service.CreateRouteParam:
    properties:
      authorize_id:
        description: 鉴权配置
        type: string
      collection_id:
        description: 路由分组ID
        type: string
      description:
        description: 路由描述
        type: string
      endpoint_id:
        description: 绑定的后端服务
        type: string
      match_options:
        description: 特殊匹配规则
        items:
          $ref: '#/definitions/value.MatchOption'
        type: array
      method:
        description: 支持方法
        items:
          type: string
        type: array
      modify_options:
        description: 数据编辑
        items:
          $ref: '#/definitions/value.ModifyOption'
        type: array
      name:
        description: 路由名称
        type: string
      path:
        description: 匹配路径
        type: string
      path_rewrite:
        allOf:
        - $ref: '#/definitions/value.PathRewrite'
        description: 路径重写
      path_type:
        allOf:
        - $ref: '#/definitions/enum.RoutePathType'
        description: 匹配路径
    required:
    - collection_id
    - match_options
    - method
    - name
    - path
    - path_type
    type: object
  service.DynamicStatResult:
    properties:
      collection:
        $ref: '#/definitions/dto.DynamicStatCollection'
      disk_total:
        type: integer
      mem_swap_total:
        type: integer
      mem_virtual_total:
        type: integer
    type: object
  service.ListAuthorizeResult:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.Authorize'
        type: array
      total:
        type: integer
    type: object
  service.ListCertificateResult:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.Certificate'
        type: array
      total:
        type: integer
    type: object
  service.ListCollectionResult:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.Collection'
        type: array
      total:
        type: integer
    type: object
  service.ListEndpointResult:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.Endpoint'
        type: array
      total:
        type: integer
    type: object
  service.ListRouteResult:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.Route'
        type: array
      total:
        type: integer
    type: object
  service.UpdateAuthorizeParam:
    properties:
      attribute:
        $ref: '#/definitions/value.AuthorizeAttribute'
      description:
        type: string
      id:
        type: string
      name:
        type: string
      type:
        type: string
    required:
    - attribute
    - id
    - name
    - type
    type: object
  service.UpdateCertificateParam:
    properties:
      certificate:
        type: string
      id:
        type: string
      key:
        type: string
      name:
        type: string
    required:
    - certificate
    - id
    - key
    - name
    type: object
  service.UpdateCollectionParam:
    properties:
      authorize_id:
        description: 鉴权配置
        type: string
      description:
        description: 分组描述
        type: string
      endpoint_id:
        description: 绑定的后端服务
        type: string
      id:
        type: string
      name:
        description: 分组名
        type: string
      parent_id:
        description: 父级节点
        type: string
      server_names:
        description: 绑定的域名
        items:
          type: string
        type: array
    required:
    - id
    - name
    type: object
  service.UpdateEndpointParam:
    properties:
      description:
        description: 服务描述
        type: string
      endpoint:
        allOf:
        - $ref: '#/definitions/value.ForwardEndpoint'
        description: 远程服务
      id:
        type: string
      name:
        description: 服务备注名
        type: string
      type:
        allOf:
        - $ref: '#/definitions/enum.EndpointType'
        description: 服务类型
    required:
    - endpoint
    - id
    - name
    - type
    type: object
  service.UpdateRouteParam:
    properties:
      authorize_id:
        description: 鉴权配置
        type: string
      collection_id:
        description: 路由分组ID
        type: string
      description:
        description: 路由描述
        type: string
      endpoint_id:
        description: 绑定的后端服务
        type: string
      id:
        description: ID
        type: string
      match_options:
        description: 特殊匹配规则
        items:
          $ref: '#/definitions/value.MatchOption'
        type: array
      method:
        description: 支持方法
        items:
          type: string
        type: array
      modify_options:
        description: 数据编辑
        items:
          $ref: '#/definitions/value.ModifyOption'
        type: array
      name:
        description: 路由名称
        type: string
      path:
        description: 匹配路径
        type: string
      path_rewrite:
        allOf:
        - $ref: '#/definitions/value.PathRewrite'
        description: 路径重写
      path_type:
        allOf:
        - $ref: '#/definitions/enum.RoutePathType'
        description: 匹配路径类型
      status:
        allOf:
        - $ref: '#/definitions/enum.RouteStatus'
        description: 路由状态
    required:
    - id
    - match_options
    type: object
  user.CreateSessionResponse:
    properties:
      expire_at:
        type: string
      name:
        type: string
      scopes:
        items:
          type: string
        type: array
      token:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  user.CreateUserRequest:
    properties:
      name:
        type: string
      password:
        type: string
      scopes:
        items:
          type: string
        type: array
    type: object
  user.CreateUserSessionRequest:
    properties:
      name:
        type: string
      password:
        type: string
    required:
    - name
    - password
    type: object
  user.ListUserResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/user.UserDto'
        type: array
      total:
        type: integer
    type: object
  user.UpdateUserRequest:
    properties:
      id:
        type: string
      name:
        type: string
      password:
        type: string
      scopes:
        items:
          type: string
        type: array
    required:
    - id
    type: object
  user.UserDto:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        description: 用户名
        type: string
      scopes:
        description: 用户权限
        items:
          type: string
        type: array
      status:
        allOf:
        - $ref: '#/definitions/user.UserStatus'
        description: 用户状态
      updated_at:
        type: string
    type: object
  user.UserStatus:
    enum:
    - active
    - inactive
    type: string
    x-enum-varnames:
    - UserStatusActive
    - UserStatusInactive
  value.AuthorizeAttribute:
    properties:
      binary:
        $ref: '#/definitions/value.AuthorizeAttributeBinary'
    type: object
  value.AuthorizeAttributeBinary:
    properties:
      header:
        type: string
      key:
        type: string
      sources:
        items:
          $ref: '#/definitions/value.AuthorizeSource'
        type: array
    required:
    - sources
    type: object
  value.AuthorizeSource:
    properties:
      name:
        description: 匹配值
        type: string
      source:
        description: 匹配源
        type: string
    required:
    - name
    - source
    type: object
  value.ForwardEndpoint:
    properties:
      static:
        $ref: '#/definitions/value.ForwardEndpointStatic'
    type: object
  value.ForwardEndpointStatic:
    properties:
      address:
        items:
          $ref: '#/definitions/value.ForwardEndpointTarget'
        type: array
      timeout:
        type: integer
    required:
    - address
    type: object
  value.ForwardEndpointTarget:
    properties:
      address:
        type: string
      network:
        type: string
      weight:
        type: integer
    required:
    - address
    - network
    - weight
    type: object
  value.MatchOption:
    properties:
      name:
        description: 匹配值
        type: string
      source:
        description: 匹配源
        type: string
      type:
        description: 匹配方式
        type: string
      value:
        description: 匹配内容
        type: string
    required:
    - name
    - source
    - type
    - value
    type: object
  value.ModifyOption:
    properties:
      name:
        description: 名称
        type: string
      source:
        description: 编辑源
        type: string
      type:
        description: 编辑类型
        type: string
      value:
        description: 值
        type: string
    required:
    - name
    - source
    - type
    type: object
  value.PathRewrite:
    properties:
      regex:
        type: string
      replace:
        type: string
    type: object
info:
  contact: {}
paths:
  /agent/reload:
    post:
      consumes:
      - application/json
      description: 重载代理服务路由
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: 重载代理服务路由
      tags:
      - Agent
  /authorizes:
    get:
      consumes:
      - application/json
      description: Authorize列表
      parameters:
      - description: Authorize
        in: query
        name: name
        type: string
      - description: 是否包含total
        in: query
        name: include_total
        type: boolean
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: pre_page
        type: integer
      - collectionFormat: csv
        description: 展开数据
        in: query
        items:
          type: string
        name: expand
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.ListAuthorizeResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Authorize列表
      tags:
      - Authorize
    post:
      consumes:
      - application/json
      description: Create Authorize
      parameters:
      - description: 数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.CreateAuthorizeParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Authorize'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Create Authorize
      tags:
      - Authorize
  /authorizes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Authorize
      parameters:
      - description: AuthorizeID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Delete Authorize
      tags:
      - Authorize
    get:
      consumes:
      - application/json
      description: Get Authorize
      parameters:
      - description: Authorize ID
        in: path
        name: id
        required: true
        type: string
      - collectionFormat: csv
        description: expand attribute list
        in: query
        items:
          type: string
        name: expand
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Authorize'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Get Authorize
      tags:
      - Authorize
    post:
      consumes:
      - application/json
      description: Update Authorize
      parameters:
      - description: Authorize ID
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.UpdateAuthorizeParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Authorize'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Update Authorize
      tags:
      - Authorize
  /certificates:
    get:
      consumes:
      - application/json
      description: 证书列表
      parameters:
      - description: 证书
        in: query
        name: name
        type: string
      - description: 是否包含total
        in: query
        name: include_total
        type: boolean
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: pre_page
        type: integer
      - collectionFormat: csv
        description: 展开数据
        in: query
        items:
          type: string
        name: expand
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.ListCertificateResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: 证书列表
      tags:
      - 证书
    post:
      consumes:
      - application/json
      description: 创建证书
      parameters:
      - description: 数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.CreateCertificateParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Certificate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: 创建证书
      tags:
      - 证书
  /certificates/{id}:
    delete:
      consumes:
      - application/json
      description: 删除证书
      parameters:
      - description: 证书ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: 删除证书
      tags:
      - 证书
    get:
      consumes:
      - application/json
      description: 获取证书
      parameters:
      - description: 证书ID
        in: path
        name: id
        required: true
        type: string
      - collectionFormat: csv
        description: 展开数据
        in: query
        items:
          type: string
        name: expand
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Certificate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: 获取证书
      tags:
      - 证书
    post:
      consumes:
      - application/json
      description: 更新证书
      parameters:
      - description: 证书ID
        in: path
        name: id
        required: true
        type: string
      - description: 数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.UpdateCertificateParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Authorize'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: 更新证书
      tags:
      - 证书
  /collections:
    get:
      consumes:
      - application/json
      description: Collection列表
      parameters:
      - description: 父级ID
        in: query
        name: parent_id
        type: string
      - description: 获取深度
        in: query
        name: depth
        type: integer
      - description: Collection
        in: query
        name: name
        type: string
      - description: 是否包含total
        in: query
        name: include_total
        type: boolean
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: pre_page
        type: integer
      - collectionFormat: csv
        description: 展开数据
        in: query
        items:
          type: string
        name: expand
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.ListCollectionResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Collection列表
      tags:
      - Collection
    post:
      consumes:
      - application/json
      description: Create Collection
      parameters:
      - description: Collection data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.CreateCollectionParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Collection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Create Collection
      tags:
      - Collection
  /collections/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Collection
      parameters:
      - description: CollectionID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Delete Collection
      tags:
      - Collection
    get:
      consumes:
      - application/json
      description: Get Collection
      parameters:
      - description: Collection ID
        in: path
        name: id
        required: true
        type: string
      - collectionFormat: csv
        description: expand attribute list
        in: query
        items:
          type: string
        name: expand
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Collection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Get Collection
      tags:
      - Collection
    post:
      consumes:
      - application/json
      description: Update Collection
      parameters:
      - description: Collection ID
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.UpdateCollectionParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Collection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Update Collection
      tags:
      - Collection
  /endpoints:
    get:
      consumes:
      - application/json
      description: Endpoint list
      parameters:
      - description: Endpoint
        in: query
        name: name
        type: string
      - description: 是否包含total
        in: query
        name: include_total
        type: boolean
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: pre_page
        type: integer
      - collectionFormat: csv
        description: 展开数据
        in: query
        items:
          type: string
        name: expand
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.ListEndpointResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Endpoint list
      tags:
      - Endpoint
    post:
      consumes:
      - application/json
      description: Create Endpoint
      parameters:
      - description: Endpoint data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.CreateEndpointParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Endpoint'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Create Endpoint
      tags:
      - Endpoint
  /endpoints/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Endpoint
      parameters:
      - description: EndpointID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Delete Endpoint
      tags:
      - Endpoint
    get:
      consumes:
      - application/json
      description: Get Endpoint
      parameters:
      - description: Endpoint ID
        in: path
        name: id
        required: true
        type: string
      - collectionFormat: csv
        description: expand attribute list
        in: query
        items:
          type: string
        name: expand
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Endpoint'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Get Endpoint
      tags:
      - Endpoint
    post:
      consumes:
      - application/json
      description: Update Endpoint
      parameters:
      - description: Endpoint ID
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.UpdateEndpointParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Endpoint'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Update Endpoint
      tags:
      - Endpoint
  /monitor/dynamic-stat:
    get:
      consumes:
      - application/json
      description: List Dynamic Stat
      parameters:
      - description: 开始时间。默认-1h
        in: query
        name: start_time
        type: string
      - description: 结束时间，默认当前时间
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.DynamicStatResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: List Dynamic Stat
      tags:
      - Monitor
  /routes:
    get:
      consumes:
      - application/json
      description: 路由列表
      parameters:
      - description: 搜索名称
        in: query
        name: name
        type: string
      - description: 搜索路径
        in: query
        name: path
        type: string
      - description: 是否包含total
        in: query
        name: include_total
        type: boolean
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: pre_page
        type: integer
      - collectionFormat: csv
        description: 展开数据
        in: query
        items:
          type: string
        name: expand
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.ListRouteResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: 路由列表
      tags:
      - 路由
    post:
      consumes:
      - application/json
      description: 创建路由
      parameters:
      - description: 请求体
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.CreateRouteParam'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.Route'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: 创建路由
      tags:
      - 路由
  /routes/{id}:
    delete:
      consumes:
      - application/json
      description: 删除路由
      parameters:
      - description: 路由ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: 删除路由
      tags:
      - 路由
    get:
      consumes:
      - application/json
      description: 获取路由
      parameters:
      - description: 路由ID
        in: path
        name: id
        required: true
        type: string
      - collectionFormat: csv
        description: 展开数据
        in: query
        items:
          type: string
        name: expand
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Route'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: 获取路由
      tags:
      - 路由
    post:
      consumes:
      - application/json
      description: 更新路由
      parameters:
      - description: 路由ID
        in: path
        name: id
        required: true
        type: string
      - description: 数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.UpdateRouteParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Route'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: 更新路由
      tags:
      - 路由
  /users:
    get:
      consumes:
      - application/json
      description: User list
      parameters:
      - description: User
        in: query
        name: name
        type: string
      - description: 是否包含total
        in: query
        name: include_total
        type: boolean
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: pre_page
        type: integer
      - collectionFormat: csv
        description: 展开数据
        in: query
        items:
          type: string
        name: expand
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ListUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: User list
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: User data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Create User
      tags:
      - User
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete User
      parameters:
      - description: UserID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get User
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - collectionFormat: csv
        description: expand attribute list
        in: query
        items:
          type: string
        name: expand
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Get User
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Update User
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Update User
      tags:
      - User
  /users/session:
    delete:
      consumes:
      - application/json
      description: Delete User Session
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Delete User Session
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create User CreateSession
      parameters:
      - description: data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserSessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.CreateSessionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HttpError'
      summary: Create User CreateSession
      tags:
      - User
swagger: "2.0"
